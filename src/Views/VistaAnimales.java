/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;
import Controlador.AnimalesControlador;
import Modelo.AnimalModel;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sebas
 */
public class VistaAnimales extends javax.swing.JFrame {
    
    private AnimalesControlador AnimalesControlador;
    
    public VistaAnimales() {
        initComponents();
        setSize(900,500);
            setLocationRelativeTo(null);
            setResizable(false);
        AnimalesControlador = new AnimalesControlador();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCarnivoro = new javax.swing.JToggleButton();
        btnHerbivoro = new javax.swing.JToggleButton();
        btnViviparo = new javax.swing.JToggleButton();
        btnOviparo = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        btnVolver = new javax.swing.JToggleButton();
        btnVertodosAnimales = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        añadirAnimal = new javax.swing.JToggleButton();
        btnApadrinados = new javax.swing.JToggleButton();
        btnNoApadrinado = new javax.swing.JToggleButton();
        btnApadrinarHerbivoro = new javax.swing.JToggleButton();
        btnApadrinarCarnivoro = new javax.swing.JToggleButton();
        btnRegistrarDefuncion = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 153));

        btnCarnivoro.setText("Carnívoros");
        btnCarnivoro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarnivoroActionPerformed(evt);
            }
        });

        btnHerbivoro.setText("Herbívoro");
        btnHerbivoro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHerbivoroActionPerformed(evt);
            }
        });

        btnViviparo.setText("Vivíparo");
        btnViviparo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViviparoActionPerformed(evt);
            }
        });

        btnOviparo.setText("Ovíparo");
        btnOviparo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOviparoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Viner Hand ITC", 0, 24)); // NOI18N
        jLabel1.setText("ANIMALES KIBA");

        btnVolver.setText("menu");
        btnVolver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnVertodosAnimales.setBackground(new java.awt.Color(153, 255, 153));
        btnVertodosAnimales.setFont(new java.awt.Font("Viner Hand ITC", 0, 12)); // NOI18N
        btnVertodosAnimales.setText("Ver Todos");
        btnVertodosAnimales.setBorder(null);
        btnVertodosAnimales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVertodosAnimalesActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "N_Especie", "Nombre", "Edad", "Peso", "Apadrinado", "Nacimiento", "Alimentacion"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        añadirAnimal.setText("Añadir Animal");
        añadirAnimal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        añadirAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirAnimalActionPerformed(evt);
            }
        });

        btnApadrinados.setText("Apadrinados");
        btnApadrinados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApadrinadosActionPerformed(evt);
            }
        });

        btnNoApadrinado.setText("No Apadrinados");
        btnNoApadrinado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoApadrinadoActionPerformed(evt);
            }
        });

        btnApadrinarHerbivoro.setText("Apadrinar Herbivoro");
        btnApadrinarHerbivoro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApadrinarHerbivoroActionPerformed(evt);
            }
        });

        btnApadrinarCarnivoro.setText("Apadrinar Carnivoro");
        btnApadrinarCarnivoro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApadrinarCarnivoroActionPerformed(evt);
            }
        });

        btnRegistrarDefuncion.setText("Defunción");
        btnRegistrarDefuncion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarDefuncionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnApadrinados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnOviparo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnCarnivoro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnNoApadrinado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnViviparo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnHerbivoro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(81, 81, 81)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnApadrinarCarnivoro)
                                            .addComponent(btnApadrinarHerbivoro)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(114, 114, 114)
                                        .addComponent(btnVertodosAnimales)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVolver)
                        .addGap(262, 262, 262)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(añadirAnimal)
                        .addGap(21, 21, 21))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRegistrarDefuncion)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(añadirAnimal))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btnRegistrarDefuncion, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(btnVertodosAnimales)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCarnivoro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHerbivoro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOviparo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViviparo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnApadrinados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNoApadrinado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnApadrinarHerbivoro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApadrinarCarnivoro)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        VistaUsuario vu = new VistaUsuario();
       vu.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnVertodosAnimalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVertodosAnimalesActionPerformed
        try {
        List<AnimalModel> animales = AnimalesControlador.MostrarAnimales();

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();

        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }//GEN-LAST:event_btnVertodosAnimalesActionPerformed

    private void btnViviparoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViviparoActionPerformed
         try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerViviparo("viviparo");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnViviparoActionPerformed

    private void btnOviparoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOviparoActionPerformed
        try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerOviparo("oviparo");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnOviparoActionPerformed

    private void btnCarnivoroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarnivoroActionPerformed
        try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerCarnivoro("carnivoro");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnCarnivoroActionPerformed

    private void btnHerbivoroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHerbivoroActionPerformed
         try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerHerbivoro("herbivoro");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnHerbivoroActionPerformed

    private void añadirAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirAnimalActionPerformed
        VistaAñadirAnimal va = new VistaAñadirAnimal();
       va.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_añadirAnimalActionPerformed

    private void btnApadrinadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApadrinadosActionPerformed
        try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerApadrinado("apadrinado");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnApadrinadosActionPerformed

    private void btnNoApadrinadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoApadrinadoActionPerformed
       try {
        List<AnimalModel> animales = AnimalesControlador.ObtenerNoApadrinado("NoApadrinado");

        DefaultTableModel modeloTabla = (DefaultTableModel) jTable2.getModel();
        modeloTabla.setRowCount(0);

        for (AnimalModel animal : animales) {
            modeloTabla.addRow(new Object[] {
                animal.getN_especie(),
                animal.getNombre(),
                animal.getEdad(),
                animal.getPeso(),
                animal.getApadrinado(),
                animal.getNacimiento(),
                animal.getEspecie()
            });
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al mostrar los animales: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnNoApadrinadoActionPerformed

    private void btnApadrinarHerbivoroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApadrinarHerbivoroActionPerformed
        VistaApadrinar va = null;
        try {
            va = new VistaApadrinar();
        } catch (Exception ex) {
            Logger.getLogger(VistaAnimales.class.getName()).log(Level.SEVERE, null, ex);
        }
       va.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnApadrinarHerbivoroActionPerformed

    private void btnApadrinarCarnivoroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApadrinarCarnivoroActionPerformed
        VistaApadrinarCarnivoro vac = null;
        try {
            vac = new VistaApadrinarCarnivoro();
        } catch (Exception ex) {
            Logger.getLogger(VistaAnimales.class.getName()).log(Level.SEVERE, null, ex);
        }
       vac.setVisible(true);
       this.dispose();
    }//GEN-LAST:event_btnApadrinarCarnivoroActionPerformed

    private void btnRegistrarDefuncionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarDefuncionActionPerformed
        VistaDefuncion vDef = null;
        try {
            vDef = new VistaDefuncion();
        } catch (Exception ex) {
            Logger.getLogger(VistaAnimales.class.getName()).log(Level.SEVERE, null, ex);
        }
            vDef.setVisible(true);
    }//GEN-LAST:event_btnRegistrarDefuncionActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton añadirAnimal;
    private javax.swing.JToggleButton btnApadrinados;
    private javax.swing.JToggleButton btnApadrinarCarnivoro;
    private javax.swing.JToggleButton btnApadrinarHerbivoro;
    private javax.swing.JToggleButton btnCarnivoro;
    private javax.swing.JToggleButton btnHerbivoro;
    private javax.swing.JToggleButton btnNoApadrinado;
    private javax.swing.JToggleButton btnOviparo;
    private javax.swing.JToggleButton btnRegistrarDefuncion;
    private javax.swing.JToggleButton btnVertodosAnimales;
    private javax.swing.JToggleButton btnViviparo;
    private javax.swing.JToggleButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
